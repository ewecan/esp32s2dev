ESP32 的 flash 
可以包含多个应用程序&不同类型的数据（例如校准数据、文件系统数据、参数存储数据等）。
因此在 flash 的 默认偏移地址 0x8000 处烧写一张分区表


默认开始地址为 0x8000,

例如：
0x0000-0x1000   未使用          (esp32在0x1000,esp8266为0x0000)
0x1000-0x8000   boot            (引导程序)
0x8000-0x9000   partition table (大小固定为 4K(0x400*4=0x1000))
0x9000-0xF000   nvs             (地址可以任意设置,系统通过类型(data)和子类型(nvs)来加载)
0xF000-0x10000  phy_init        (地址可以任意设置，一般为 4k(0x1000)，系统通过类型 data 和子类型 phy 来加载)
0x10000-0x11000 应用程序3
0x11000-0x12000 应用程序4

# Name,   Type, SubType, Offset,  Size, Flags
nvs     , data, nvs    , x9000  , 0x6000,
phy_init, data, phy    , 0xf000 , 4K    ,
factory , app , factory, 0x10000, 3M    ,


Name(标签)
Name 字段可以是任何有意义的名称，
但不能超过 16 个字符（之后的内容将被截断）。
该字段对 ESP32 并不是特别重要。

Type(app、data)
Type 指定为app (0)或data (1)
也可以直接使用数字 0-254(0x00-0xFE)
注意:0x00-0x3F 是预留给 esp-idf 的核心功能，
如果应用程序需要保存数据,需要在 0x40-0xFE 内添加一个自定义分区类型。

SubType 
SubType 字段长度为 8 bit,内容与具体 Type 有关

offset & size
flash 中的偏移量(分区的加载地址)
对于 ESP32:  app 分区的偏移地址必须 64K(0x10000) 对齐
对于 ESP8266:app 分区的偏移地址必须 4K (0x1000) 对齐
app 分区的大小和偏移地址可以采用十进制数/十六进制数(0x)
且支持 K(1024字节0x400) 或 M(1024*1024字节) 的倍数单位
